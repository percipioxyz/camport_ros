#! /usr/bin/env python

PACKAGE='percipio_camera'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#gen.add(name, type, level, description, default, min, max)
gen.add("laser_power", int_t, 0, "laser power", 100, 0, 100);

gen.add("auto_exposure", bool_t, 0, "Auto-Exposure", True)

#default exposure roi: p1(0.f, 0.f)  p2(1.f, 1.f) means full frame
####################################################################
#    |--------------------------|
#    |                          |
#    |    p1|-----------|       |
#    |      |           |       |
#    |      |___________|       |
#    |                   p2     |
#    |__________________________|
####################################################################
gen.add("auto_exposure_p1_x", double_t, 1, "Auto exposure roi rectangle start x in ratio", 0, 0, 1)
gen.add("auto_exposure_p1_y", double_t, 1, "Auto exposure roi rectangle start y in ratio", 0, 0, 1)
gen.add("auto_exposure_p2_x", double_t, 1, "Auto exposure roi rectangle end x in ratio", 1, 0, 1)
gen.add("auto_exposure_p2_y", double_t, 1, "Auto exposure roi rectangle end y in ratio", 1, 0, 1)

gen.add("auto_white_balance", bool_t, 0, "Auto-White-Balance", True)
gen.add("rgb_exposure_time", int_t, 0, "rgb camera exposure time", 100, 0, 100)

gen.add("rgb_analog_gain", int_t, 0, "rgb camera analog gain", 100, 0, 100)
gen.add("rgb_r_gain", int_t, 0, "rgb camera r gain", 100, 0, 100)
gen.add("rgb_g_gain", int_t, 0, "rgb camera g gain", 100, 0, 100)
gen.add("rgb_b_gain", int_t, 0, "rgb camera b gain", 100, 0, 100)
gen.add("rgb_aec_target_v", int_t, 0, "rgb camera aec target Y", 100, 0, 4000)


gen.add("ir_exposure_time", int_t, 0, "ir camera exposure time", 0, 0, 100)
gen.add("ir_analog_gain", int_t, 0, "ir camera analog gain", 0, 0, 100)
gen.add("ir_gain", int_t, 0, "ir camera gain", 0, 0, 100);

#Only some models of cameras support hardware filtering processing
gen.add("tof_hw_speckle_size", int_t, 1, "blob size smaller than this will be removed.", 0, 0, 200)
gen.add("tof_hw_speckle_diff", int_t, 1, "Maximum difference between neighbor disparity pixels.", 200, 100, 500)

#Filtering processing on software,If the camera supports hardware filtering, it is recommended to turn it off here
gen.add("depth_speckle_filter", bool_t, 0, "Remove speckles on depth image.", False)
gen.add("max_speckle_size", int_t, 1, "blob size smaller than this will be removed.", 150, 10, 3000)
gen.add("max_speckle_diff", int_t, 1, "Maximum difference between neighbor disparity pixels.", 64, 10, 1500)

gen.add("data_skip",  int_t, 0, "Skip N images for every image published (rgb/depth/depth_registered/ir)", 0, 0, 20)
gen.add("z_scaling", double_t, 1.0, "Scaling factor for depth values", 1.0, 0, 1.0)

gen.add("use_device_time", bool_t, 0, "Use internal timer of OpenNI device", True)

exit(gen.generate(PACKAGE, "Percipio", "Percipio"))
  
