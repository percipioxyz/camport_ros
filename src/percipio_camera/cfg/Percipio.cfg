#! /usr/bin/env python

PACKAGE='percipio_camera'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("laser_power", int_t, 0, "laser power", 100, 0, 100);

gen.add("auto_exposure", bool_t, 0, "Auto-Exposure", True)
gen.add("auto_white_balance", bool_t, 0, "Auto-White-Balance", True)
gen.add("rgb_analog_gain", int_t, 0, "rgb camera analog gain", 100, 0, 100);
gen.add("rgb_r_gain", int_t, 0, "rgb camera r gain", 100, 0, 100);
gen.add("rgb_g_gain", int_t, 0, "rgb camera g gain", 100, 0, 100);
gen.add("rgb_b_gain", int_t, 0, "rgb camera b gain", 100, 0, 100);
gen.add("rgb_exposure_time", int_t, 0, "rgb camera exposure time", 100, 0, 100);

gen.add("ir_gain", int_t, 0, "ir camera gain", 100, 0, 100);
gen.add("depth_registration", bool_t, 0, "Map depth data to color coordinate", False)
gen.add("data_skip",  int_t, 0, "Skip N images for every image published (rgb/depth/depth_registered/ir)", 0, 0, 20)
gen.add("z_scaling", int_t, 0, "Scaling factor for depth values", 1, 1, 32)
gen.add("use_device_time", bool_t, 0, "Use internal timer of system", True)

gen.add("tof_depth_channel", int_t, 0, "tof channel", 0, 0, 9)

quality = gen.enum([gen.const("Low",   int_t,0,"Low is 0"),
                                   gen.const("Medium",int_t,1,"Medium is 1"),
                                   gen.const("High",  int_t,2,"Hight is 2")],
                                  "Select from the list")                         
gen.add("tof_depth_quality", int_t, 4, "Select from the list", 2,   0, 2, edit_method=quality)

exit(gen.generate(PACKAGE, "Percipio", "Percipio"))
  
